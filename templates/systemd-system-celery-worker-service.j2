# {{ ansible_managed }}
# http://docs.celeryproject.org/en/latest/userguide/daemonizing.html#usage-systemd

[Unit]
Description=Celery Docker worker
After=network.target

[Service]
Type=forking
#PIDFile=/var/run/celery/celery-worker.pid
User=celery
TimeoutStopSec={{ celery_docker_systemd_timeout }}
WorkingDirectory={{ celery_docker_basedir }}/worker

EnvironmentFile=-/etc/sysconfig/celery-worker

# The docs suggest "%n%I.log" but this doesn't work
ExecStart=/bin/sh -c '{{ celery_docker_basedir }}/venv/bin/celery \
    multi start \
    ${CELERYD_NODES} \
    -A ${CELERY_APP} \
    --pidfile={{ celery_docker_var_run }}/%n.pid \
    --logfile={{ celery_docker_var_log }}/%n%i.log \
    --loglevel=${CELERYD_LOG_LEVEL} \
    --concurrency=${CELERYD_CONCURRENCY} \
    ${CELERYD_OPTS}'

ExecStop=/bin/sh -c '{{ celery_docker_basedir }}/venv/bin/celery \
    multi stopwait \
    ${CELERYD_NODES} \
    --pidfile={{ celery_docker_var_run }}/%n.pid'

#ExecReload=/bin/sh -c '{{ celery_docker_basedir }}/venv/bin/celery multi restart \
#    ${CELERYD_NODES} \
#    -A ${CELERY_APP} \
#    --pidfile={{ celery_docker_var_run }}/%n.pid \
#    --logfile={{ celery_docker_var_log }}/%n%i.log \
#    --loglevel=${CELERYD_LOG_LEVEL} \
#    --concurrency=${CELERYD_CONCURRENCY} \
#    ${CELERYD_OPTS}'
